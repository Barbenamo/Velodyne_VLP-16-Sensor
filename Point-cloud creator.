% Date: 20/04/2021.
% This script creates a 3D point cloud from the Velodyne VLP-16 output
% data.
clc
clear all
PointCloud=[];
index=1;
load 'VELODATA.mat';
A=ALL_DATA(:,:);
v=[];
w=[-15,1,-13,3,-11,5,-9,7,-7,9,-5,11,-3,13,-1,15]; %vertical angles.
w=(pi/180).*w;%convert to radian.
for i=1:150
 for j=1:99:size(A)
     if A(j,i)==255 && A(j+1,i)==238
        v=A(j+2:j+99,i);
        [Az,DV]=VectorProcess(v);
        for k=1:32
         Point=Create3Dpoint(Az,DV(k),mod(k,16),w);
         for a=1:3
         PointCloud(index,a)=Point(a);
         end
         index=index+1;
        end
     end
 end    
end
 figure(1)
 plot3(PointCloud(:,1),PointCloud(:,2),PointCloud(:,3),'.');
 title('Velodyne output map')
 axis equal
 xlabel('x[m]')
 ylabel('y[m]')
 zlabel('z[m]')
 grid on 
 
function [Az,DirectionVector]=VectorProcess(v)
 Az=CreateAzimuth(v(1),v(2));
 DirectionVector=0;
 k=1;
 for i=3:size(v)
    if mod(i,3)==2
        continue 
    end
    if mod(i,3)==0
    DirectionVector(k)=CreateLocation(v(i),v(i+1));
    k=k+1;
    end
 end
end

% A method to create a 3D point from the azimuth, direction.
function[Point]=Create3Dpoint(Az,direction,num,w)
 phi=w(num+1);
 x=direction*cos(phi)*sin(Az);
 y=direction*cos(phi)*cos(Az);
 z=direction*sin(phi);
 Point=[x,y,z];
end
% A method to create location based on the data-sheet formula
function[loc]=CreateLocation(n1,n2)
 loc=(n2*256+n1)*0.002;
end
% A method to create azimuth based on the data-sheet formula
function[az]=CreateAzimuth(n1,n2)
 az=(n2*256+n1)*(pi/180)/100;
end
